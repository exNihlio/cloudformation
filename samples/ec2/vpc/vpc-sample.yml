Resources:
  ## Create the VPC here
  SampleVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.1.0.0/16"
      EnableDnsHostnames: True
      EnableDnsSupport: True
      InstanceTenancy: "default"
      Tags:
        - Key: "Name" 
          Value: "sample-vpc"
  # Creates a simple security group
  SampleSecurityGroup:
     Type: "AWS::EC2::SecurityGroup"
     Properties:
       GroupDescription: "Allow SSH access"
       GroupName: "SampleSecurityGroup"
       VpcId: 
       # This is literal magic. 'Ref' is an intrinsic function
       # that will populate the values form a logical resource, in this
       # case the 'SampleVPC' described above. Somehow, the Cloudformation
       # API is able to extract the VPC ID out of this. Too much magic
       # if you ask me.
         Ref: "SampleVPC"
       SecurityGroupIngress:
         - CidrIp: "0.0.0.0/0"
           FromPort: 22
           ToPort: 22
           IpProtocol: "tcp"
       SecurityGroupEgress:
         - IpProtocol: "-1"
           FromPort: 0
           ToPort: 0
           CidrIp: "0.0.0.0/0"
  SampleInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "sample-igw"
  # Attach the Internet Gateway to our VPC
  SampleVPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref "SampleInternetGateway"
      VpcId: !Ref "SampleVPC"
  SampleSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.1.1.0/24"
      AvailabilityZone: "us-west-2a"
      VpcId: !Ref "SampleVPC"
      MapPublicIpOnLaunch: True
      Tags:
        - Key: "Name"
          Value: "sub-pub-usw2a"
  SampleRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref "SampleVPC"
  # Create a route that allows access to the access to the internet
  SampleRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "SampleInternetGateway"
      RouteTableId: !Ref "SampleRouteTable"
  SampleSubnetRouteTableAssoc:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref "SampleRouteTable"
      SubnetId: !Ref "SampleSubnet"
  # SampleEC2Instance:
  #   Type:
